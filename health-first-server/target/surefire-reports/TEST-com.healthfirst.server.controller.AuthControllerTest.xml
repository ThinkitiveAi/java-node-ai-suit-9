<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.healthfirst.server.controller.AuthControllerTest" time="4.673" tests="7" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/ttpl-lnv15-092/Documents/1 aug/java-node-ai-suit-9/health-first-server/target/test-classes:/home/ttpl-lnv15-092/Documents/1 aug/java-node-ai-suit-9/health-first-server/target/classes:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.1/spring-boot-starter-web-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.1/spring-boot-starter-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.1/spring-boot-starter-logging-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/home/ttpl-lnv15-092/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/slf4j/jul-to-slf4j/2.0.9/jul-to-slf4j-2.0.9.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.1/spring-boot-starter-json-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.1/spring-boot-starter-tomcat-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.17/tomcat-embed-core-10.1.17.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.17/tomcat-embed-websocket-10.1.17.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-web/6.1.2/spring-web-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-beans/6.1.2/spring-beans-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/io/micrometer/micrometer-observation/1.12.1/micrometer-observation-1.12.1.jar:/home/ttpl-lnv15-092/.m2/repository/io/micrometer/micrometer-commons/1.12.1/micrometer-commons-1.12.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-webmvc/6.1.2/spring-webmvc-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-context/6.1.2/spring-context-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-expression/6.1.2/spring-expression-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.1/spring-boot-starter-data-jpa-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.1/spring-boot-starter-aop-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.1/spring-boot-starter-jdbc-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-jdbc/6.1.2/spring-jdbc-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/hibernate/orm/hibernate-core/6.4.1.Final/hibernate-core-6.4.1.Final.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/ttpl-lnv15-092/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/ttpl-lnv15-092/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/ttpl-lnv15-092/.m2/repository/net/bytebuddy/byte-buddy/1.14.10/byte-buddy-1.14.10.jar:/home/ttpl-lnv15-092/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/home/ttpl-lnv15-092/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/home/ttpl-lnv15-092/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/home/ttpl-lnv15-092/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/data/spring-data-jpa/3.2.1/spring-data-jpa-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/data/spring-data-commons/3.2.1/spring-data-commons-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-orm/6.1.2/spring-orm-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-tx/6.1.2/spring-tx-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-aspects/6.1.2/spring-aspects-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.1/spring-boot-starter-validation-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.17/tomcat-embed-el-10.1.17.jar:/home/ttpl-lnv15-092/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.1/spring-boot-starter-security-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-aop/6.1.2/spring-aop-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/security/spring-security-config/6.2.1/spring-security-config-6.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/security/spring-security-web/6.2.1/spring-security-web-6.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/home/ttpl-lnv15-092/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/home/ttpl-lnv15-092/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/ttpl-lnv15-092/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.1/spring-boot-starter-test-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-test/3.2.1/spring-boot-test-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.1/spring-boot-test-autoconfigure-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/home/ttpl-lnv15-092/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/ttpl-lnv15-092/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.10/byte-buddy-agent-1.14.10.jar:/home/ttpl-lnv15-092/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/ttpl-lnv15-092/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-core/6.1.2/spring-core-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-jcl/6.1.2/spring-jcl-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-test/6.1.2/spring-test-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-devtools/3.2.1/spring-boot-devtools-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot/3.2.1/spring-boot-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.1/spring-boot-autoconfigure-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/security/spring-security-test/6.2.1/spring-security-test-6.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/security/spring-security-core/6.2.1/spring-security-core-6.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/security/spring-security-crypto/6.2.1/spring-security-crypto-6.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.3.0/springdoc-openapi-starter-webmvc-ui-2.3.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/webjars/swagger-ui/5.10.3/swagger-ui-5.10.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.3.0/springdoc-openapi-starter-webmvc-api-2.3.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.3.0/springdoc-openapi-starter-common-2.3.0.jar:/home/ttpl-lnv15-092/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.19/swagger-core-jakarta-2.2.19.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/home/ttpl-lnv15-092/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.19/swagger-annotations-jakarta-2.2.19.jar:/home/ttpl-lnv15-092/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.19/swagger-models-jakarta-2.2.19.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.3/jackson-dataformat-yaml-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/projectlombok/lombok/1.18.32/lombok-1.18.32.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Kolkata"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-17-oracle/lib"/>
    <property name="sun.java.command" value="/home/ttpl-lnv15-092/Documents/1 aug/java-node-ai-suit-9/health-first-server/target/surefire/surefirebooter-20250813114757540_3.jar /home/ttpl-lnv15-092/Documents/1 aug/java-node-ai-suit-9/health-first-server/target/surefire 2025-08-13T11-47-57_481-jvmRun1 surefire-20250813114757540_1tmp surefire_0-20250813114757540_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/ttpl-lnv15-092/Documents/1 aug/java-node-ai-suit-9/health-first-server/target/test-classes:/home/ttpl-lnv15-092/Documents/1 aug/java-node-ai-suit-9/health-first-server/target/classes:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.1/spring-boot-starter-web-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.1/spring-boot-starter-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.1/spring-boot-starter-logging-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/home/ttpl-lnv15-092/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/slf4j/jul-to-slf4j/2.0.9/jul-to-slf4j-2.0.9.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.1/spring-boot-starter-json-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.1/spring-boot-starter-tomcat-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.17/tomcat-embed-core-10.1.17.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.17/tomcat-embed-websocket-10.1.17.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-web/6.1.2/spring-web-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-beans/6.1.2/spring-beans-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/io/micrometer/micrometer-observation/1.12.1/micrometer-observation-1.12.1.jar:/home/ttpl-lnv15-092/.m2/repository/io/micrometer/micrometer-commons/1.12.1/micrometer-commons-1.12.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-webmvc/6.1.2/spring-webmvc-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-context/6.1.2/spring-context-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-expression/6.1.2/spring-expression-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.1/spring-boot-starter-data-jpa-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.1/spring-boot-starter-aop-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.1/spring-boot-starter-jdbc-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-jdbc/6.1.2/spring-jdbc-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/hibernate/orm/hibernate-core/6.4.1.Final/hibernate-core-6.4.1.Final.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/ttpl-lnv15-092/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/ttpl-lnv15-092/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/ttpl-lnv15-092/.m2/repository/net/bytebuddy/byte-buddy/1.14.10/byte-buddy-1.14.10.jar:/home/ttpl-lnv15-092/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/home/ttpl-lnv15-092/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/home/ttpl-lnv15-092/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/home/ttpl-lnv15-092/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/data/spring-data-jpa/3.2.1/spring-data-jpa-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/data/spring-data-commons/3.2.1/spring-data-commons-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-orm/6.1.2/spring-orm-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-tx/6.1.2/spring-tx-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-aspects/6.1.2/spring-aspects-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.1/spring-boot-starter-validation-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.17/tomcat-embed-el-10.1.17.jar:/home/ttpl-lnv15-092/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.1/spring-boot-starter-security-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-aop/6.1.2/spring-aop-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/security/spring-security-config/6.2.1/spring-security-config-6.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/security/spring-security-web/6.2.1/spring-security-web-6.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/home/ttpl-lnv15-092/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/home/ttpl-lnv15-092/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/ttpl-lnv15-092/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.1/spring-boot-starter-test-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-test/3.2.1/spring-boot-test-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.1/spring-boot-test-autoconfigure-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/ttpl-lnv15-092/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/home/ttpl-lnv15-092/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/ttpl-lnv15-092/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.10/byte-buddy-agent-1.14.10.jar:/home/ttpl-lnv15-092/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/ttpl-lnv15-092/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-core/6.1.2/spring-core-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-jcl/6.1.2/spring-jcl-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/spring-test/6.1.2/spring-test-6.1.2.jar:/home/ttpl-lnv15-092/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-devtools/3.2.1/spring-boot-devtools-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot/3.2.1/spring-boot-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.1/spring-boot-autoconfigure-3.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/security/spring-security-test/6.2.1/spring-security-test-6.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/security/spring-security-core/6.2.1/spring-security-core-6.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springframework/security/spring-security-crypto/6.2.1/spring-security-crypto-6.2.1.jar:/home/ttpl-lnv15-092/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.3.0/springdoc-openapi-starter-webmvc-ui-2.3.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/webjars/swagger-ui/5.10.3/swagger-ui-5.10.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.3.0/springdoc-openapi-starter-webmvc-api-2.3.0.jar:/home/ttpl-lnv15-092/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.3.0/springdoc-openapi-starter-common-2.3.0.jar:/home/ttpl-lnv15-092/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.19/swagger-core-jakarta-2.2.19.jar:/home/ttpl-lnv15-092/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/home/ttpl-lnv15-092/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.19/swagger-annotations-jakarta-2.2.19.jar:/home/ttpl-lnv15-092/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.19/swagger-models-jakarta-2.2.19.jar:/home/ttpl-lnv15-092/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.3/jackson-dataformat-yaml-2.15.3.jar:/home/ttpl-lnv15-092/.m2/repository/org/projectlombok/lombok/1.18.32/lombok-1.18.32.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/ttpl-lnv15-092"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.home" value="/usr/lib/jvm/java-17-oracle"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/ttpl-lnv15-092/Documents/1 aug/java-node-ai-suit-9/health-first-server"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/ttpl-lnv15-092/Documents/1 aug/java-node-ai-suit-9/health-first-server/target/surefire/surefirebooter-20250813114757540_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.6+9-LTS-190"/>
    <property name="user.name" value="ttpl-lnv15-092"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.8.0-65-generic"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/home/ttpl-lnv15-092/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="com.zaxxer.hikari.pool_number" value="3"/>
    <property name="java.version" value="17.0.6"/>
    <property name="user.dir" value="/home/ttpl-lnv15-092/Documents/1 aug/java-node-ai-suit-9/health-first-server"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="184709"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/home/ttpl-lnv15-092/Downloads/squashfs-root/usr/lib/:/home/ttpl-lnv15-092/Downloads/squashfs-root/usr/lib32/:/home/ttpl-lnv15-092/Downloads/squashfs-root/usr/lib64/:/home/ttpl-lnv15-092/Downloads/squashfs-root/lib/:/home/ttpl-lnv15-092/Downloads/squashfs-root/lib/i386-linux-gnu/:/home/ttpl-lnv15-092/Downloads/squashfs-root/lib/x86_64-linux-gnu/:/home/ttpl-lnv15-092/Downloads/squashfs-root/lib/aarch64-linux-gnu/:/home/ttpl-lnv15-092/Downloads/squashfs-root/lib32/:/home/ttpl-lnv15-092/Downloads/squashfs-root/lib64/::/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="17.0.6+9-LTS-190"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="login_InactiveAccount" classname="com.healthfirst.server.controller.AuthControllerTest" time="0.897">
    <system-out><![CDATA[2025-08-13T11:48:06.046+05:30  INFO 184709 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.healthfirst.server.controller.AuthControllerTest]: AuthControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-13T11:48:06.049+05:30  INFO 184709 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.healthfirst.server.HealthFirstServerApplication for test class com.healthfirst.server.controller.AuthControllerTest
2025-08-13T11:48:06.053+05:30  INFO 184709 --- [           main] o.s.b.d.r.RestartApplicationListener     : Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.1)

2025-08-13T11:48:06.077+05:30  INFO 184709 --- [           main] c.h.s.controller.AuthControllerTest      : Starting AuthControllerTest using Java 17.0.6 with PID 184709 (started by ttpl-lnv15-092 in /home/ttpl-lnv15-092/Documents/1 aug/java-node-ai-suit-9/health-first-server)
2025-08-13T11:48:06.078+05:30 DEBUG 184709 --- [           main] c.h.s.controller.AuthControllerTest      : Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-13T11:48:06.078+05:30  INFO 184709 --- [           main] c.h.s.controller.AuthControllerTest      : The following 1 profile is active: "test"
2025-08-13T11:48:06.079+05:30 DEBUG 184709 --- [           main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@233c4b40
2025-08-13T11:48:06.221+05:30  INFO 184709 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-13T11:48:06.229+05:30  INFO 184709 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 4 JPA repository interfaces.
2025-08-13T11:48:06.301+05:30  INFO 184709 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-13T11:48:06.303+05:30  INFO 184709 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-13T11:48:06.305+05:30  INFO 184709 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-13T11:48:06.306+05:30  INFO 184709 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2025-08-13T11:48:06.338+05:30  INFO 184709 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@5c32f2bf
2025-08-13T11:48:06.338+05:30  INFO 184709 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2025-08-13T11:48:06.343+05:30  WARN 184709 --- [           main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-13T11:48:06.498+05:30  INFO 184709 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-13T11:48:06.498+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists appointment_slots 
       drop constraint if exists FKftxjajf2t5r4ahhur7l1goj0g
Hibernate: 
    alter table if exists appointment_slots 
       drop constraint if exists FKftxjajf2t5r4ahhur7l1goj0g
2025-08-13T11:48:06.506+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists appointment_slots 
       drop constraint if exists FKpmfyqwawdwtsbl0fvf68ns3bs
Hibernate: 
    alter table if exists appointment_slots 
       drop constraint if exists FKpmfyqwawdwtsbl0fvf68ns3bs
2025-08-13T11:48:06.508+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists appointment_slots 
       drop constraint if exists FKjcceiw4ssitqttyycjy6616xd
Hibernate: 
    alter table if exists appointment_slots 
       drop constraint if exists FKjcceiw4ssitqttyycjy6616xd
2025-08-13T11:48:06.510+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists patient_medical_history 
       drop constraint if exists FKh1h5vct3rhl2mei2663c58ykn
Hibernate: 
    alter table if exists patient_medical_history 
       drop constraint if exists FKh1h5vct3rhl2mei2663c58ykn
2025-08-13T11:48:06.511+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists provider_availability 
       drop constraint if exists FKf63f5ogx2p3oj9lc53c6jlod7
Hibernate: 
    alter table if exists provider_availability 
       drop constraint if exists FKf63f5ogx2p3oj9lc53c6jlod7
2025-08-13T11:48:06.512+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists provider_availability_special_requirements 
       drop constraint if exists FKq97w1pm46bjvr3dj7jarvquny
Hibernate: 
    alter table if exists provider_availability_special_requirements 
       drop constraint if exists FKq97w1pm46bjvr3dj7jarvquny
2025-08-13T11:48:06.514+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    drop table if exists appointment_slots cascade
Hibernate: 
    drop table if exists appointment_slots cascade
2025-08-13T11:48:06.517+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    drop table if exists patient_medical_history cascade
Hibernate: 
    drop table if exists patient_medical_history cascade
2025-08-13T11:48:06.518+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    drop table if exists patients cascade
Hibernate: 
    drop table if exists patients cascade
2025-08-13T11:48:06.521+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    drop table if exists provider_availability cascade
Hibernate: 
    drop table if exists provider_availability cascade
2025-08-13T11:48:06.524+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    drop table if exists provider_availability_special_requirements cascade
Hibernate: 
    drop table if exists provider_availability_special_requirements cascade
2025-08-13T11:48:06.525+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    drop table if exists providers cascade
Hibernate: 
    drop table if exists providers cascade
2025-08-13T11:48:06.528+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    create table appointment_slots (
        availability_id bigint not null,
        created_at timestamp(6) with time zone not null,
        id bigserial not null,
        patient_id bigint,
        provider_id bigint not null,
        slot_end_time timestamp(6) with time zone not null,
        slot_start_time timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone not null,
        uuid uuid not null unique,
        appointment_type varchar(255),
        booking_reference varchar(255) unique,
        status varchar(255) not null check (status in ('AVAILABLE','BOOKED','CANCELLED','BLOCKED')),
        primary key (id)
    )
Hibernate: 
    create table appointment_slots (
        availability_id bigint not null,
        created_at timestamp(6) with time zone not null,
        id bigserial not null,
        patient_id bigint,
        provider_id bigint not null,
        slot_end_time timestamp(6) with time zone not null,
        slot_start_time timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone not null,
        uuid uuid not null unique,
        appointment_type varchar(255),
        booking_reference varchar(255) unique,
        status varchar(255) not null check (status in ('AVAILABLE','BOOKED','CANCELLED','BLOCKED')),
        primary key (id)
    )
2025-08-13T11:48:06.536+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    create table patient_medical_history (
        patient_id bigint not null,
        medical_history varchar(255)
    )
Hibernate: 
    create table patient_medical_history (
        patient_id bigint not null,
        medical_history varchar(255)
    )
2025-08-13T11:48:06.538+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    create table patients (
        date_of_birth date not null,
        email_verified boolean not null,
        is_active boolean not null,
        phone_verified boolean not null,
        created_at timestamp(6) with time zone,
        id bigserial not null,
        updated_at timestamp(6) with time zone,
        uuid uuid not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        city varchar(255),
        email varchar(255) not null unique,
        gender varchar(255) not null check (gender in ('MALE','FEMALE','OTHER','PREFER_NOT_TO_SAY')),
        name varchar(255),
        password_hash varchar(255) not null,
        phone varchar(255),
        phone_number varchar(255) not null unique,
        policy_number varchar(255),
        provider varchar(255),
        relationship varchar(255),
        state varchar(255),
        street varchar(255),
        zip varchar(255),
        primary key (id)
    )
Hibernate: 
    create table patients (
        date_of_birth date not null,
        email_verified boolean not null,
        is_active boolean not null,
        phone_verified boolean not null,
        created_at timestamp(6) with time zone,
        id bigserial not null,
        updated_at timestamp(6) with time zone,
        uuid uuid not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        city varchar(255),
        email varchar(255) not null unique,
        gender varchar(255) not null check (gender in ('MALE','FEMALE','OTHER','PREFER_NOT_TO_SAY')),
        name varchar(255),
        password_hash varchar(255) not null,
        phone varchar(255),
        phone_number varchar(255) not null unique,
        policy_number varchar(255),
        provider varchar(255),
        relationship varchar(255),
        state varchar(255),
        street varchar(255),
        zip varchar(255),
        primary key (id)
    )
2025-08-13T11:48:06.546+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    create table provider_availability (
        base_fee numeric(10,2),
        break_duration integer not null check ((break_duration>=0) and (break_duration<=120)),
        current_appointments integer not null check (current_appointments>=0),
        date date not null,
        end_time time(6) not null,
        insurance_accepted boolean,
        is_recurring boolean not null,
        max_appointments_per_slot integer not null check ((max_appointments_per_slot>=1) and (max_appointments_per_slot<=10)),
        recurrence_end_date date,
        slot_duration integer not null check ((slot_duration<=480) and (slot_duration>=15)),
        start_time time(6) not null,
        created_at timestamp(6) with time zone not null,
        id bigserial not null,
        provider_id bigint not null,
        updated_at timestamp(6) with time zone not null,
        uuid uuid not null unique,
        notes TEXT,
        appointment_type varchar(255) not null check (appointment_type in ('CONSULTATION','FOLLOW_UP','EMERGENCY','TELEMEDICINE')),
        currency varchar(255),
        location_address varchar(255),
        location_type varchar(255) not null check (location_type in ('CLINIC','HOSPITAL','TELEMEDICINE','HOME_VISIT')),
        recurrence_pattern varchar(255) check (recurrence_pattern in ('DAILY','WEEKLY','MONTHLY')),
        room_number varchar(255),
        status varchar(255) not null check (status in ('AVAILABLE','BOOKED','CANCELLED','BLOCKED','MAINTENANCE')),
        timezone varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table provider_availability (
        base_fee numeric(10,2),
        break_duration integer not null check ((break_duration>=0) and (break_duration<=120)),
        current_appointments integer not null check (current_appointments>=0),
        date date not null,
        end_time time(6) not null,
        insurance_accepted boolean,
        is_recurring boolean not null,
        max_appointments_per_slot integer not null check ((max_appointments_per_slot>=1) and (max_appointments_per_slot<=10)),
        recurrence_end_date date,
        slot_duration integer not null check ((slot_duration<=480) and (slot_duration>=15)),
        start_time time(6) not null,
        created_at timestamp(6) with time zone not null,
        id bigserial not null,
        provider_id bigint not null,
        updated_at timestamp(6) with time zone not null,
        uuid uuid not null unique,
        notes TEXT,
        appointment_type varchar(255) not null check (appointment_type in ('CONSULTATION','FOLLOW_UP','EMERGENCY','TELEMEDICINE')),
        currency varchar(255),
        location_address varchar(255),
        location_type varchar(255) not null check (location_type in ('CLINIC','HOSPITAL','TELEMEDICINE','HOME_VISIT')),
        recurrence_pattern varchar(255) check (recurrence_pattern in ('DAILY','WEEKLY','MONTHLY')),
        room_number varchar(255),
        status varchar(255) not null check (status in ('AVAILABLE','BOOKED','CANCELLED','BLOCKED','MAINTENANCE')),
        timezone varchar(255) not null,
        primary key (id)
    )
2025-08-13T11:48:06.554+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    create table provider_availability_special_requirements (
        availability_id bigint not null,
        requirement varchar(255)
    )
Hibernate: 
    create table provider_availability_special_requirements (
        availability_id bigint not null,
        requirement varchar(255)
    )
2025-08-13T11:48:06.556+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    create table providers (
        is_active boolean not null,
        years_of_experience integer check ((years_of_experience>=0) and (years_of_experience<=50)),
        created_at timestamp(6) not null,
        id bigserial not null,
        updated_at timestamp(6) not null,
        uuid uuid not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        specialization varchar(100) not null,
        clinic_city varchar(255) not null,
        clinic_state varchar(255) not null,
        clinic_street varchar(255) not null,
        clinic_zip varchar(255) not null,
        email varchar(255) not null unique,
        license_number varchar(255) not null unique,
        password_hash varchar(255) not null,
        phone_number varchar(255) not null unique,
        verification_status varchar(255) not null check (verification_status in ('PENDING','VERIFIED','REJECTED')),
        primary key (id)
    )
Hibernate: 
    create table providers (
        is_active boolean not null,
        years_of_experience integer check ((years_of_experience>=0) and (years_of_experience<=50)),
        created_at timestamp(6) not null,
        id bigserial not null,
        updated_at timestamp(6) not null,
        uuid uuid not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        specialization varchar(100) not null,
        clinic_city varchar(255) not null,
        clinic_state varchar(255) not null,
        clinic_street varchar(255) not null,
        clinic_zip varchar(255) not null,
        email varchar(255) not null unique,
        license_number varchar(255) not null unique,
        password_hash varchar(255) not null,
        phone_number varchar(255) not null unique,
        verification_status varchar(255) not null check (verification_status in ('PENDING','VERIFIED','REJECTED')),
        primary key (id)
    )
2025-08-13T11:48:06.565+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists appointment_slots 
       add constraint FKftxjajf2t5r4ahhur7l1goj0g 
       foreign key (availability_id) 
       references provider_availability
Hibernate: 
    alter table if exists appointment_slots 
       add constraint FKftxjajf2t5r4ahhur7l1goj0g 
       foreign key (availability_id) 
       references provider_availability
2025-08-13T11:48:06.568+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists appointment_slots 
       add constraint FKpmfyqwawdwtsbl0fvf68ns3bs 
       foreign key (patient_id) 
       references patients
Hibernate: 
    alter table if exists appointment_slots 
       add constraint FKpmfyqwawdwtsbl0fvf68ns3bs 
       foreign key (patient_id) 
       references patients
2025-08-13T11:48:06.570+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists appointment_slots 
       add constraint FKjcceiw4ssitqttyycjy6616xd 
       foreign key (provider_id) 
       references providers
Hibernate: 
    alter table if exists appointment_slots 
       add constraint FKjcceiw4ssitqttyycjy6616xd 
       foreign key (provider_id) 
       references providers
2025-08-13T11:48:06.573+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists patient_medical_history 
       add constraint FKh1h5vct3rhl2mei2663c58ykn 
       foreign key (patient_id) 
       references patients
Hibernate: 
    alter table if exists patient_medical_history 
       add constraint FKh1h5vct3rhl2mei2663c58ykn 
       foreign key (patient_id) 
       references patients
2025-08-13T11:48:06.575+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists provider_availability 
       add constraint FKf63f5ogx2p3oj9lc53c6jlod7 
       foreign key (provider_id) 
       references providers
Hibernate: 
    alter table if exists provider_availability 
       add constraint FKf63f5ogx2p3oj9lc53c6jlod7 
       foreign key (provider_id) 
       references providers
2025-08-13T11:48:06.577+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    alter table if exists provider_availability_special_requirements 
       add constraint FKq97w1pm46bjvr3dj7jarvquny 
       foreign key (availability_id) 
       references provider_availability
Hibernate: 
    alter table if exists provider_availability_special_requirements 
       add constraint FKq97w1pm46bjvr3dj7jarvquny 
       foreign key (availability_id) 
       references provider_availability
2025-08-13T11:48:06.582+05:30  INFO 184709 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-13T11:48:06.848+05:30  WARN 184709 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-13T11:48:06.895+05:30 DEBUG 184709 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : 39 mappings in 'requestMappingHandlerMapping'
2025-08-13T11:48:06.922+05:30 DEBUG 184709 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-13T11:48:06.928+05:30  INFO 184709 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@41404e50, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@16535150, org.springframework.security.web.context.SecurityContextHolderFilter@320d4c62, org.springframework.security.web.header.HeaderWriterFilter@3b47adeb, org.springframework.web.filter.CorsFilter@1b08681b, org.springframework.security.web.authentication.logout.LogoutFilter@f9b0bfb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@67d1a3af, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@617f624b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@365a82c6, org.springframework.security.web.session.SessionManagementFilter@68ebc1ed, org.springframework.security.web.access.ExceptionTranslationFilter@210e90fc, org.springframework.security.web.access.intercept.AuthorizationFilter@7fca46aa]
2025-08-13T11:48:06.969+05:30 DEBUG 184709 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-13T11:48:06.973+05:30 DEBUG 184709 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-13T11:48:07.020+05:30  INFO 184709 --- [           main] c.h.s.controller.AuthControllerTest      : Started AuthControllerTest in 0.968 seconds (process running for 9.428)
2025-08-13T11:48:07.026+05:30  INFO 184709 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-13T11:48:07.027+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-13T11:48:07.027+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-08-13T11:48:07.421+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-13T11:48:07.441+05:30 DEBUG 184709 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.healthfirst.server.controller.AuthController#login(LoginRequest)
2025-08-13T11:48:07.444+05:30 DEBUG 184709 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json" to [com.healthfirst.server.dto.LoginRequest@45fc10ea]
2025-08-13T11:48:07.525+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    update
        providers 
    set
        clinic_city=?,
        clinic_state=?,
        clinic_street=?,
        clinic_zip=?,
        email=?,
        first_name=?,
        is_active=?,
        last_name=?,
        license_number=?,
        password_hash=?,
        phone_number=?,
        specialization=?,
        updated_at=?,
        uuid=?,
        verification_status=?,
        years_of_experience=? 
    where
        id=?
Hibernate: 
    update
        providers 
    set
        clinic_city=?,
        clinic_state=?,
        clinic_street=?,
        clinic_zip=?,
        email=?,
        first_name=?,
        is_active=?,
        last_name=?,
        license_number=?,
        password_hash=?,
        phone_number=?,
        specialization=?,
        updated_at=?,
        uuid=?,
        verification_status=?,
        years_of_experience=? 
    where
        id=?
2025-08-13T11:48:07.549+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.clinic_city,
        p1_0.clinic_state,
        p1_0.clinic_street,
        p1_0.clinic_zip,
        p1_0.created_at,
        p1_0.email,
        p1_0.first_name,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.license_number,
        p1_0.password_hash,
        p1_0.phone_number,
        p1_0.specialization,
        p1_0.updated_at,
        p1_0.uuid,
        p1_0.verification_status,
        p1_0.years_of_experience 
    from
        providers p1_0 
    where
        p1_0.email=?
Hibernate: 
    select
        p1_0.id,
        p1_0.clinic_city,
        p1_0.clinic_state,
        p1_0.clinic_street,
        p1_0.clinic_zip,
        p1_0.created_at,
        p1_0.email,
        p1_0.first_name,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.license_number,
        p1_0.password_hash,
        p1_0.phone_number,
        p1_0.specialization,
        p1_0.updated_at,
        p1_0.uuid,
        p1_0.verification_status,
        p1_0.years_of_experience 
    from
        providers p1_0 
    where
        p1_0.email=?
2025-08-13T11:48:07.915+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-13T11:48:07.915+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.healthfirst.server.dto.ApiResponse@1b617ae1]
]]></system-out>
  </testcase>
  <testcase name="login_InvalidCredentials" classname="com.healthfirst.server.controller.AuthControllerTest" time="0.644">
    <system-out><![CDATA[2025-08-13T11:48:07.925+05:30  INFO 184709 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-13T11:48:07.925+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-13T11:48:07.926+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-08-13T11:48:08.262+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-13T11:48:08.265+05:30 DEBUG 184709 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.healthfirst.server.controller.AuthController#login(LoginRequest)
2025-08-13T11:48:08.265+05:30 DEBUG 184709 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json" to [com.healthfirst.server.dto.LoginRequest@57accba6]
2025-08-13T11:48:08.267+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.clinic_city,
        p1_0.clinic_state,
        p1_0.clinic_street,
        p1_0.clinic_zip,
        p1_0.created_at,
        p1_0.email,
        p1_0.first_name,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.license_number,
        p1_0.password_hash,
        p1_0.phone_number,
        p1_0.specialization,
        p1_0.updated_at,
        p1_0.uuid,
        p1_0.verification_status,
        p1_0.years_of_experience 
    from
        providers p1_0 
    where
        p1_0.email=?
Hibernate: 
    select
        p1_0.id,
        p1_0.clinic_city,
        p1_0.clinic_state,
        p1_0.clinic_street,
        p1_0.clinic_zip,
        p1_0.created_at,
        p1_0.email,
        p1_0.first_name,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.license_number,
        p1_0.password_hash,
        p1_0.phone_number,
        p1_0.specialization,
        p1_0.updated_at,
        p1_0.uuid,
        p1_0.verification_status,
        p1_0.years_of_experience 
    from
        providers p1_0 
    where
        p1_0.email=?
2025-08-13T11:48:08.561+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-13T11:48:08.561+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.healthfirst.server.dto.ApiResponse@62df22d5]
]]></system-out>
  </testcase>
  <testcase name="login_EmptyPassword" classname="com.healthfirst.server.controller.AuthControllerTest" time="0.312">
    <system-out><![CDATA[2025-08-13T11:48:08.568+05:30  INFO 184709 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-13T11:48:08.568+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-13T11:48:08.569+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-08-13T11:48:08.862+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-13T11:48:08.864+05:30 DEBUG 184709 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.healthfirst.server.controller.AuthController#login(LoginRequest)
2025-08-13T11:48:08.865+05:30 DEBUG 184709 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json" to [com.healthfirst.server.dto.LoginRequest@4f437f41]
2025-08-13T11:48:08.874+05:30 DEBUG 184709 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.healthfirst.server.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-08-13T11:48:08.875+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-13T11:48:08.875+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.healthfirst.server.dto.ApiResponse@2f444df0]
2025-08-13T11:48:08.876+05:30 DEBUG 184709 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.healthfirst.server.dto.ApiResponse<com.healthfirst.server.dto.LoginResponse>> com.healthfirst.server.controller.AuthController.login(com.healthfirst.server.dto.LoginRequest): [Field error in object 'loginRequest' on field 'password': rejected value []; codes [NotBlank.loginRequest.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [loginRequest.password,password]; arguments []; default message [password]]; default message [Password is required]] ]
]]></system-out>
  </testcase>
  <testcase name="login_InvalidEmailFormat" classname="com.healthfirst.server.controller.AuthControllerTest" time="0.308">
    <system-out><![CDATA[2025-08-13T11:48:08.881+05:30  INFO 184709 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-13T11:48:08.881+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-13T11:48:08.881+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-08-13T11:48:09.176+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-13T11:48:09.181+05:30 DEBUG 184709 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.healthfirst.server.controller.AuthController#login(LoginRequest)
2025-08-13T11:48:09.182+05:30 DEBUG 184709 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json" to [com.healthfirst.server.dto.LoginRequest@5c40e398]
2025-08-13T11:48:09.183+05:30 DEBUG 184709 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.healthfirst.server.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-08-13T11:48:09.183+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-13T11:48:09.184+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.healthfirst.server.dto.ApiResponse@5c5121f9]
2025-08-13T11:48:09.185+05:30 DEBUG 184709 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.healthfirst.server.dto.ApiResponse<com.healthfirst.server.dto.LoginResponse>> com.healthfirst.server.controller.AuthController.login(com.healthfirst.server.dto.LoginRequest): [Field error in object 'loginRequest' on field 'email': rejected value [invalid-email]; codes [Email.loginRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [loginRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@4ad1ca85,.*]; default message [Email must be a valid email format]] ]
]]></system-out>
  </testcase>
  <testcase name="login_Success" classname="com.healthfirst.server.controller.AuthControllerTest" time="0.624">
    <system-out><![CDATA[2025-08-13T11:48:09.190+05:30  INFO 184709 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-13T11:48:09.190+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-13T11:48:09.190+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-08-13T11:48:09.485+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-13T11:48:09.494+05:30 DEBUG 184709 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.healthfirst.server.controller.AuthController#login(LoginRequest)
2025-08-13T11:48:09.494+05:30 DEBUG 184709 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json" to [com.healthfirst.server.dto.LoginRequest@54e1dc9a]
2025-08-13T11:48:09.496+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.clinic_city,
        p1_0.clinic_state,
        p1_0.clinic_street,
        p1_0.clinic_zip,
        p1_0.created_at,
        p1_0.email,
        p1_0.first_name,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.license_number,
        p1_0.password_hash,
        p1_0.phone_number,
        p1_0.specialization,
        p1_0.updated_at,
        p1_0.uuid,
        p1_0.verification_status,
        p1_0.years_of_experience 
    from
        providers p1_0 
    where
        p1_0.email=?
Hibernate: 
    select
        p1_0.id,
        p1_0.clinic_city,
        p1_0.clinic_state,
        p1_0.clinic_street,
        p1_0.clinic_zip,
        p1_0.created_at,
        p1_0.email,
        p1_0.first_name,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.license_number,
        p1_0.password_hash,
        p1_0.phone_number,
        p1_0.specialization,
        p1_0.updated_at,
        p1_0.uuid,
        p1_0.verification_status,
        p1_0.years_of_experience 
    from
        providers p1_0 
    where
        p1_0.email=?
2025-08-13T11:48:09.807+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-13T11:48:09.807+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.healthfirst.server.dto.ApiResponse@12b4dc17]
]]></system-out>
  </testcase>
  <testcase name="login_NonExistentEmail" classname="com.healthfirst.server.controller.AuthControllerTest" time="0.3">
    <system-out><![CDATA[2025-08-13T11:48:09.814+05:30  INFO 184709 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-13T11:48:09.815+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-13T11:48:09.815+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-08-13T11:48:10.105+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-13T11:48:10.107+05:30 DEBUG 184709 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.healthfirst.server.controller.AuthController#login(LoginRequest)
2025-08-13T11:48:10.108+05:30 DEBUG 184709 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json" to [com.healthfirst.server.dto.LoginRequest@7a6eb4bb]
2025-08-13T11:48:10.109+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.clinic_city,
        p1_0.clinic_state,
        p1_0.clinic_street,
        p1_0.clinic_zip,
        p1_0.created_at,
        p1_0.email,
        p1_0.first_name,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.license_number,
        p1_0.password_hash,
        p1_0.phone_number,
        p1_0.specialization,
        p1_0.updated_at,
        p1_0.uuid,
        p1_0.verification_status,
        p1_0.years_of_experience 
    from
        providers p1_0 
    where
        p1_0.email=?
Hibernate: 
    select
        p1_0.id,
        p1_0.clinic_city,
        p1_0.clinic_state,
        p1_0.clinic_street,
        p1_0.clinic_zip,
        p1_0.created_at,
        p1_0.email,
        p1_0.first_name,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.license_number,
        p1_0.password_hash,
        p1_0.phone_number,
        p1_0.specialization,
        p1_0.updated_at,
        p1_0.uuid,
        p1_0.verification_status,
        p1_0.years_of_experience 
    from
        providers p1_0 
    where
        p1_0.email=?
2025-08-13T11:48:10.110+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-13T11:48:10.111+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.healthfirst.server.dto.ApiResponse@187271bf]
]]></system-out>
  </testcase>
  <testcase name="login_UnverifiedAccount" classname="com.healthfirst.server.controller.AuthControllerTest" time="0.603">
    <system-out><![CDATA[2025-08-13T11:48:10.116+05:30  INFO 184709 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-13T11:48:10.116+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-13T11:48:10.116+05:30  INFO 184709 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-08-13T11:48:10.407+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        providers
        (clinic_city, clinic_state, clinic_street, clinic_zip, created_at, email, first_name, is_active, last_name, license_number, password_hash, phone_number, specialization, updated_at, uuid, verification_status, years_of_experience) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-13T11:48:10.410+05:30 DEBUG 184709 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.healthfirst.server.controller.AuthController#login(LoginRequest)
2025-08-13T11:48:10.410+05:30 DEBUG 184709 --- [           main] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json" to [com.healthfirst.server.dto.LoginRequest@4b06009d]
2025-08-13T11:48:10.413+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    update
        providers 
    set
        clinic_city=?,
        clinic_state=?,
        clinic_street=?,
        clinic_zip=?,
        email=?,
        first_name=?,
        is_active=?,
        last_name=?,
        license_number=?,
        password_hash=?,
        phone_number=?,
        specialization=?,
        updated_at=?,
        uuid=?,
        verification_status=?,
        years_of_experience=? 
    where
        id=?
Hibernate: 
    update
        providers 
    set
        clinic_city=?,
        clinic_state=?,
        clinic_street=?,
        clinic_zip=?,
        email=?,
        first_name=?,
        is_active=?,
        last_name=?,
        license_number=?,
        password_hash=?,
        phone_number=?,
        specialization=?,
        updated_at=?,
        uuid=?,
        verification_status=?,
        years_of_experience=? 
    where
        id=?
2025-08-13T11:48:10.415+05:30 DEBUG 184709 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.clinic_city,
        p1_0.clinic_state,
        p1_0.clinic_street,
        p1_0.clinic_zip,
        p1_0.created_at,
        p1_0.email,
        p1_0.first_name,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.license_number,
        p1_0.password_hash,
        p1_0.phone_number,
        p1_0.specialization,
        p1_0.updated_at,
        p1_0.uuid,
        p1_0.verification_status,
        p1_0.years_of_experience 
    from
        providers p1_0 
    where
        p1_0.email=?
Hibernate: 
    select
        p1_0.id,
        p1_0.clinic_city,
        p1_0.clinic_state,
        p1_0.clinic_street,
        p1_0.clinic_zip,
        p1_0.created_at,
        p1_0.email,
        p1_0.first_name,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.license_number,
        p1_0.password_hash,
        p1_0.phone_number,
        p1_0.specialization,
        p1_0.updated_at,
        p1_0.uuid,
        p1_0.verification_status,
        p1_0.years_of_experience 
    from
        providers p1_0 
    where
        p1_0.email=?
2025-08-13T11:48:10.713+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-13T11:48:10.713+05:30 DEBUG 184709 --- [           main] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.healthfirst.server.dto.ApiResponse@2c41b93]
]]></system-out>
  </testcase>
</testsuite>